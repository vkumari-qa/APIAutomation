{"name": "test_create_book_invalid_payload", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 422, got 200 - {\"book_summary\":\"Invalid year\",\"id\":8,\"author\":\"Author\",\"name\":\"Bad Year Book\",\"published_year\":\"not-a-year\"}\nassert 200 == 422\n +  where 200 = <Response [200 OK]>.status_code", "trace": "client = <starlette.testclient.TestClient object at 0x000001664A4379D0>\nauth_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0XzYzNGVjNjNjNjQxNTRjZmY4YTcyZmRjMmQxN2ZhZmYzQGV4YW1wbGUuY29tIiwiZXhwIjoxNzUwNDgwMDA5fQ.CcEHEtLDWGbAvYJhmymTZan4Yh8FurUo9DkIWzbXm0I'\n\n    def test_create_book_invalid_payload(client, auth_token):\n        headers = {\"Authorization\": f\"Bearer {auth_token}\"}\n    \n        # Missing required fields â€” might raise 422 or DB integrity error\n        invalid_payload_1 = {\"name\": \"Incomplete Book\"}\n        try:\n            resp1 = client.post(\"/books/\", json=invalid_payload_1, headers=headers)\n            assert resp1.status_code in [422, 500]\n        except IntegrityError:\n            pass  # acceptable failure\n    \n        # Wrong type for published_year\n        invalid_payload_2 = {\n            \"name\": \"Bad Year Book\",\n            \"author\": \"Author\",\n            \"published_year\": \"not-a-year\",\n            \"book_summary\": \"Invalid year\"\n        }\n        resp2 = client.post(\"/books/\", json=invalid_payload_2, headers=headers)\n>       assert resp2.status_code == 422, f\"Expected 422, got {resp2.status_code} - {resp2.text}\"\nE       AssertionError: Expected 422, got 200 - {\"book_summary\":\"Invalid year\",\"id\":8,\"author\":\"Author\",\"name\":\"Bad Year Book\",\"published_year\":\"not-a-year\"}\nE       assert 200 == 422\nE        +  where 200 = <Response [200 OK]>.status_code\n\ntests\\test_books.py:101: AssertionError"}, "start": 1750478209202, "stop": 1750478209225, "uuid": "82829a02-184b-4117-af88-1669c9c7c564", "historyId": "89701555f87c71dd8ba4e336eac9ee44", "testCaseId": "89701555f87c71dd8ba4e336eac9ee44", "fullName": "tests.test_books#test_create_book_invalid_payload", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_books"}, {"name": "host", "value": "Nithish-Shetty"}, {"name": "thread", "value": "16260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_books"}]}